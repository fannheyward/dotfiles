{
  "cleanupPeriodDays": 30,
  "env": {
    "BASH_DEFAULT_TIMEOUT_MS": "600000",
    "BASH_MAX_TIMEOUT_MS": "600000",
    "ENABLE_BACKGROUND_TASKS": "1",
    "CLAUDE_CODE_DISABLE_NONESSENTIAL_TRAFFIC": "1",
    "CLAUDE_BASH_MAINTAIN_PROJECT_WORKING_DIR": "true",
    "SHELL": "/opt/homebrew/bin/zsh"
  },
  "includeCoAuthoredBy": false,
  "permissions": {
    "allow": [
      "Bash(rg:*)",
      "Bash(sg:*)",
      "Bash(git diff:*)",
      "Bash(git add:*)",
      "Bash(git commit:*)",
      "Bash(npm ci)",
      "Bash(npm install)",
      "Bash(npm run lint)",
      "Bash(npm run test:*)",
      "Bash(npm run build:*)",
      "Read(src/**)",
      "Read(package*.json)",
      "Edit(src/**)"
    ],
    "deny": [
      "Bash(brew install:*)",
      "Bash(npm install -g:*)",
      "Bash(pip install:*)",
      "Bash(chmod -R 777:*)",
      "Bash(chmod 777:*)",
      "Bash(chown -R:*)",
      "Bash(gh api --method DELETE:*)",
      "Bash(gh auth logout:*)",
      "Bash(gh auth refresh:*)",
      "Bash(gh gist create:*)",
      "Bash(gh gist delete:*)",
      "Bash(gh gpg-key add:*)",
      "Bash(gh gpg-key delete:*)",
      "Bash(gh release create:*)",
      "Bash(gh release delete:*)",
      "Bash(gh release upload:*)",
      "Bash(gh repo archive:*)",
      "Bash(gh repo clone:*)",
      "Bash(gh repo create:*)",
      "Bash(gh repo delete:*)",
      "Bash(gh repo deploy-key:*)",
      "Bash(gh repo edit:*)",
      "Bash(gh repo fork:*)",
      "Bash(gh repo rename:*)",
      "Bash(gh repo sync:*)",
      "Bash(gh repo unarchive:*)",
      "Bash(gh secret delete:*)",
      "Bash(gh secret set:*)",
      "Bash(gh ssh-key add:*)",
      "Bash(gh ssh-key delete:*)",
      "Bash(gh workflow disable:*)",
      "Bash(gh workflow enable:*)",
      "Bash(gh workflow run:*)",
      "Bash(git checkout:*)",
      "Bash(git config:*)",
      "Bash(git push:*)",
      "Bash(git rebase:*)",
      "Bash(git reset --hard:*)",
      "Bash(git restore:*)",
      "Bash(rm -rf ../*)",
      "Bash(rm -rf /)",
      "Bash(rm -rf /*)",
      "Bash(rm -rf ~/*)",
      "Bash(sudo:*)"
    ]
  }
}
