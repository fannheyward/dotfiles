# sniproxy example configuration file
# lines that start with # are comments
# lines with only white space are ignored

user daemon

# PID file
pidfile /var/run/sniproxy.pid

error_log {
    # Log to the daemon syslog facility
    #syslog daemon

    # Alternatively we could log to file
    filename /var/log/sniproxy/sniproxy.log

    # Control the verbosity of the log
    priority notice
}

# blocks are delimited with {...}
listen 80 {
    proto http
    table https_hosts

    access_log {
        filename /var/log/sniproxy/https_access.log
        priority notice
    }
}

listen 443 {
    proto tls
    table https_hosts

    access_log {
        filename /var/log/sniproxy/https_access.log
        priority notice
    }
}

# named tables are defined with the table directive
table http_hosts {
    example.com 192.0.2.10:8001
    example.net 192.0.2.10:8002
    example.org 192.0.2.10:8003

# pattern:
# 	valid Perl-compatible Regular Expression that matches the
# 	hostname
#
# target:
#	- a DNS name
#	- an IP address (with optional port)
#	- '*' to use the hostname that the client requested
#
# pattern	target
#.*\.itunes\.apple\.com$	*:443
#.*	127.0.0.1:4443
}

# named tables are defined with the table directive
table https_hosts {
    # When proxying to local sockets you should use different tables since the
    # local socket server most likely will not autodetect which protocol is
    # being used
    # example.org unix:/var/run/server.sock

    # WordPress
    (.*\.|)wp\.com$ *
    (.*\.|)w\.org$ *
    (.*\.|)wordpress\.com$ *
    (.*\.|)gravatar\.com$ *

    # Wikipedia
    (.*\.|)wikipedia\.org$ *

    # Twitter
    (.*\.|)twimg\.com$ *
    (.*\.|)twitter\.com$ *
    (.*\.|)t\.co$ *

    # Facebook
    (.*\.|)facebook\.com$ *
    (.*\.|)fbstatic\.com$ *
    (.*\.|)fbcdn\.net$ *

    # Flickr
    (.*\.|)flickr\.com$ *
    (.*\.|)staticflickr\.com$ *

    # bit.ly
    bitly\.com$ *
    bit\.ly$ *

    # Google
    (.*\.|)googleapis\.com$ *
    (.*\.|)google\.com$ *
    (.*\.|)google\.co\.jp$ *
    (.*\.|)google\.com\.hk$ *
    (.*\.|)google\.com\.tw$ *
    (.*\.|)youtube\.com$ *
    (.*\.|)ytimg\.com$ *
    (.*\.|)googlevideo\.com$ *
    (.*\.|)googlehosted\.com$ *
    (.*\.|)googleusercontent\.com$ *
    (.*\.|)ggpht\.com$ *
    (.*\.|)gstatic\.com$ *
    (.*\.|)googlemail\.com$ *
    (.*\.|)googlecode\.com$ *
    (.*\.|)googledrive\.com$ *
    (.*\.|)blogspot\.com$ *
    (.*\.|)appspot\.com$ *
    (.*\.|)gmail\.com$ *
    (.*\.|)googlezip\.net$ *
    (.*\.|)googlesource\.com$ *
    (.*\.|)g\.cn$ *
    (.*\.|)google\.cn$ *
    (.*\.|)golang\.org$ *

    # ingress
    (.*\.|)panoramio.com$ *

    # Imgur
    (.*\.|)imgur\.com$ *

    # Amazon AWS
    (.*\.|)amazonaws.com *

    # CDN
    (.*\.|)global\.ssl\.fastly\.net *
    cdn\.sstatic\.net *

    #COC
    (.*\.|)supercell\.net *

    #github
    (.*\.|)github\.com *

    #instagram
    (.*\.|)instagram\.com *
}

listen 465 {
    proto tls
    table xmpp_imap_smtp
}

listen 587 {
    proto tls
    table xmpp_imap_smtp
}

listen 995 {
   proto tls
   table xmpp_imap_smtp
}

listen 5222 {
    proto tls
    table xmpp_imap_smtp
}

listen 5223 {
    proto tls
    table xmpp_imap_smtp
}

listen 5269 {
    proto tls
    table xmpp_imap_smtp
}

table xmpp_imap_smtp {
    (.*\.|)google\.com$ *
    (.*\.|)googlemail\.com$ *
    (.*\.|)gmail\.com$ *
}
